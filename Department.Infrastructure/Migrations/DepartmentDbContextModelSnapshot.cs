// <auto-generated />
using System;
using Department.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Department.Infrastructure.Migrations
{
    [DbContext(typeof(DepartmentDbContext))]
    partial class DepartmentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Department.Core.DomainEnties.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentDpartmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentDpartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Department.Core.DomainEnties.Department", b =>
                {
                    b.HasOne("Department.Core.DomainEnties.Department", "ParentDepartment")
                        .WithMany("ChildDepartment")
                        .HasForeignKey("ParentDpartmentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ParentDepartment");
                });

            modelBuilder.Entity("Department.Core.DomainEnties.Department", b =>
                {
                    b.Navigation("ChildDepartment");
                });
#pragma warning restore 612, 618
        }
    }
}
